{"ast":null,"code":"var _jsxFileName = \"/Users/vrajmehta/Downloads/Downloads/React:JavaScript/AIP_IOU/client/src/components/CompletePost/CompletePost.js\";\nimport React from 'react';\nimport { Upload, Modal, Button, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport Item from 'antd/lib/list/Item';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass CompletePost extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: [],\n      post_id: this.props.postID\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handleChange = ({\n      fileList\n    }) => this.setState({\n      fileList\n    });\n  }\n\n  handleUploadAction() {\n    let fileList = this.state.fileList;\n    let error = false;\n\n    if (fileList.length == 0) {\n      error = true;\n    } else {\n      fileList.forEach(Item => {\n        if (Item.status == 'uploading') {\n          error = true;\n        } else if (Item.status == 'error') {\n          error = true;\n        }\n      });\n    }\n\n    if (!error) {\n      let post_id = this.state.post_id;\n      let user_id = cookie.load(\"user_id\");\n      let data = {\n        \"post_id\": post_id,\n        \"user_id\": user_id,\n        \"proof\": 1\n      };\n      axios.put(\"https://aip-v1.ts.r.appspot.com/api/posts/apply_rewards\", data).then(response => {\n        let resMessage = response.data.message;\n        message.success(resMessage);\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      }).catch(e => {\n        console.log(e);\n        message.error(\"Error, Please try again\");\n      });\n    } else {\n      message.error(\"Please select at least one image before upload\");\n    }\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Upload\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: this.handlePreview,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, fileList.length >= 8 ? null : uploadButton), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleUploadAction.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(Modal, {\n      visible: previewVisible,\n      title: previewTitle,\n      footer: null,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default CompletePost;","map":{"version":3,"sources":["/Users/vrajmehta/Downloads/Downloads/React:JavaScript/AIP_IOU/client/src/components/CompletePost/CompletePost.js"],"names":["React","Upload","Modal","Button","message","PlusOutlined","axios","cookie","Item","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","CompletePost","Component","state","previewVisible","previewImage","previewTitle","fileList","post_id","props","postID","handleCancel","setState","handleChange","handleUploadAction","length","forEach","status","user_id","load","data","put","then","response","resMessage","success","setTimeout","window","location","reload","catch","e","console","log","render","uploadButton","marginTop","handlePreview","bind","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Upload, Modal, Button, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport Item from 'antd/lib/list/Item';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nclass CompletePost extends React.Component {\n  state = {\n    previewVisible: false,\n    previewImage: '',\n    previewTitle: '',\n    fileList: [],\n    post_id : this.props.postID\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n//   handlePreview = async file => {\n//     if (!file.url && !file.preview) {\n//       file.preview = await getBase64(file.originFileObj);\n//     }\n\n//     this.setState({\n//       previewImage: file.url || file.preview,\n//       previewVisible: true,\n//       previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n//     });\n//   };\n\n  handleChange = ({ fileList }) => this.setState({ fileList });\n\n  handleUploadAction(){\n    let fileList = this.state.fileList;  \n    let error = false;\n    if(fileList.length == 0){\n        error=true;\n    }else{\n        fileList.forEach(Item => {\n            if(Item.status == 'uploading'){\n                error = true;\n            }else if(Item.status == 'error'){\n                error = true;\n            }\n        });\n    }    \n    if(!error){\n        let post_id = this.state.post_id;\n        let user_id = cookie.load(\"user_id\");\n        let data = {   \n            \"post_id\": post_id,\n            \"user_id\": user_id,\n            \"proof\": 1\n        }\n        axios.put(\"https://aip-v1.ts.r.appspot.com/api/posts/apply_rewards\",data)\n        .then(response =>{\n            let resMessage = response.data.message;\n            message.success(resMessage);\n            setTimeout(() => {\n                window.location.reload();\n            },2000);     \n        })\n        .catch((e) => {\n            console.log(e);\n            message.error(\"Error, Please try again\");\n        })\n    }\n    else{\n        message.error(\"Please select at least one image before upload\");\n    }\n  }\n\n  render() {\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n    const uploadButton = (\n      <div>\n        <PlusOutlined />\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n    return (\n      <div>\n        <Upload\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          listType=\"picture-card\"\n          fileList={fileList}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length >= 8 ? null : uploadButton}\n        </Upload>\n        <Button type=\"primary\" onClick={this.handleUploadAction.bind(this)}>Upload</Button>\n        <Modal\n          visible={previewVisible}\n          title={previewTitle}\n          footer={null}\n          onCancel={this.handleCancel}\n        >\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CompletePost;\n"]},"metadata":{},"sourceType":"module"}