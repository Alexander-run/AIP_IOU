{"ast":null,"code":"var _jsxFileName = \"/Users/vrajmehta/Downloads/Downloads/React:JavaScript/AIP_IOU/client/src/components/loginPage/Index.js\";\nimport React from 'react';\nimport \"./index.css\";\nimport { Button, message } from 'antd';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      userName: '',\n      password: '',\n      hintMessage: ''\n    };\n  }\n\n  changeUserName(e) {\n    this.setState({\n      userName: e.target.value,\n      hintMessage: ''\n    });\n  }\n\n  changePassword(e) {\n    this.setState({\n      password: e.target.value,\n      hintMessage: ''\n    });\n  }\n\n  login() {\n    const username = this.state.userName;\n    const password = this.state.password;\n    let data = {\n      \"user\": {\n        \"username\": username,\n        \"password\": password\n      }\n    };\n\n    if (username == \"\") {\n      message.error(\"Username can not be null\");\n    } else if (password == \"\") {\n      message.error(\"Password can not be null\");\n    } else {\n      // http request for user account validation\n      axios.post('https://aip-v1.ts.r.appspot.com/api/users/login', data).then(res => {\n        let userInfo = res.data.users; // set cookie to store logged userID for use in other component\n\n        cookie.save(\"user_id\", userInfo.user_id, {\n          path: \"/\"\n        });\n        message.success(\"Login Success, will return to main page in 2 seconds\");\n        this.setState({\n          login: true\n        });\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      }).catch(e => {\n        console.log(e);\n        this.setState({\n          hintMessage: \"The username or password you entered does not match any account, please try again or sign up for an account\"\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"loginPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginPage-inputarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter User name\",\n      autoFocus: \"autofocus\",\n      value: this.state.userName,\n      onChange: this.changeUserName.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, this.state.hintMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginPage-inputarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.changePassword.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.login.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginPage-fogetPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Forgotten password?\"));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/vrajmehta/Downloads/Downloads/React:JavaScript/AIP_IOU/client/src/components/loginPage/Index.js"],"names":["React","Button","message","axios","cookie","LoginPage","Component","constructor","props","state","login","userName","password","hintMessage","changeUserName","e","setState","target","value","changePassword","username","data","error","post","then","res","userInfo","users","save","user_id","path","success","setTimeout","window","location","reload","catch","console","log","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./index.css\";\nimport { Button, message } from 'antd';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\n\n\nclass LoginPage extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            login:false,\n            userName: '',\n            password:'',\n            hintMessage:''\n        }\n    }\n\n    changeUserName(e){\n        this.setState({\n            userName:e.target.value,\n            hintMessage:''\n        });\n    }\n    changePassword(e){\n        this.setState({\n            password:e.target.value,\n            hintMessage:''\n        })\n    }\n    \n    login(){        \n        const username = this.state.userName;\n        const password = this.state.password;\n        let data = {\n            \"user\":{\n                \"username\": username,\n                \"password\": password\n            }\n        }\n        if(username == \"\"){\n            message.error(\"Username can not be null\");\n        }else if(password == \"\"){\n            message.error(\"Password can not be null\");\n        }else{\n            // http request for user account validation\n            axios.post('https://aip-v1.ts.r.appspot.com/api/users/login',data)\n            .then(res => {\n                let userInfo = res.data.users; \n                // set cookie to store logged userID for use in other component\n                cookie.save(\"user_id\",userInfo.user_id,{path:\"/\"});\n                message.success(\"Login Success, will return to main page in 2 seconds\");\n                this.setState({login:true});\n                setTimeout(() => {\n                    window.location.reload();\n                },2000);            \n            })\n            .catch((e) => {\n                console.log(e);\n                this.setState({\n                    hintMessage:\"The username or password you entered does not match any account, please try again or sign up for an account\"\n                });\n            })\n        }        \n    }\n\n\n    render(){\n        return(\n            <div class=\"loginPage\">\n                <div className=\"loginPage-inputarea\">\n                    <input \n                        type='text' \n                        placeholder=\"Enter User name\" \n                        autoFocus='autofocus'\n                        value={this.state.userName}\n                        onChange={this.changeUserName.bind(this)}/>\n                </div>  \n                <p>{this.state.hintMessage}</p> \n                <div className=\"loginPage-inputarea\">\n                    <input \n                        type='password' \n                        placeholder=\"Password\"\n                        value={this.state.password}\n                        onChange={this.changePassword.bind(this)}/>\n                </div>                        \n                <Button type='primary' onClick={this.login.bind(this)}>Login</Button>\n                <div className=\"loginPage-fogetPassword\"> \n                    Forgotten password?\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}