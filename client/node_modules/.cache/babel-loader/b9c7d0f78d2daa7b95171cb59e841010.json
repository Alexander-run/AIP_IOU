{"ast":null,"code":"var _jsxFileName = \"/Users/vrajmehta/Downloads/Downloads/React:JavaScript/AIP_IOU/client/src/components/MyPosts/MyPosts.js\";\nimport React from 'react';\nimport { Popover, Button, Modal, Input, message } from 'antd';\nimport { FaCoffee } from 'react-icons/fa';\nimport { GiChocolateBar, GiCupcake } from 'react-icons/gi';\nimport { FaLeaf, FaPizzaSlice } from 'react-icons/fa';\nimport './MyPosts.css';\nimport { UserOutlined, UsergroupAddOutlined, CalendarOutlined } from '@ant-design/icons';\nimport AddRewards from \"../AddRewards/Index\";\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport CompletePost from '../CompletePost/CompletePost';\nlet timer = undefined;\n\nclass MyPosts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.timerStart = () => {\n      timer = setInterval(() => {\n        let userID = cookie.load(\"user_id\");\n        let responseData = [];\n        axios.get(`https://aip-v1.ts.r.appspot.com/api/posts?user_id=${userID}`).then(response => {\n          // receive response Data\n          responseData = response.data.post; // Parse Data into local states\n\n          this.setState({\n            allPosts: responseData\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }, 2000);\n    };\n\n    this.state = {\n      login: false,\n      displayButton: false,\n      allPosts: [],\n      particularPost_Post: [{\n        \"post_id\": \"\",\n        \"added_by\": \"\",\n        \"offer_by\": \"\",\n        \"title\": \"\",\n        \"description\": \"\",\n        \"added_datetime\": \"\",\n        \"status\": \"\",\n        \"proof\": false\n      }],\n      particularPost_Rewards: [],\n      particularPost_Poster: \"\",\n      particularPost_Signer: \"\",\n      particularPost_adders: [],\n      RewardsEnumnation: [],\n      addRewardsVisible: false,\n      uploadVisible: false,\n      displayAddRewardButton: \"none\",\n      displaySignPost: \"none\",\n      displayUploadProof: \"none\"\n    };\n  } // Timer for refresh the post list\n\n\n  componentDidMount() {\n    let userID = cookie.load(\"user_id\"); // get all posts related to the logged in user(with user_id parameter)\n\n    let responseData = [];\n    setTimeout(() => {\n      axios.get(`https://aip-v1.ts.r.appspot.com/api/posts?user_id=${userID}`).then(response => {\n        // receive response Data\n        responseData = response.data.post; // Parse Data into local states\n\n        this.setState({\n          allPosts: responseData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }, 1000);\n    this.timerStart(); // get login status from cookie\n\n    if (userID) {\n      this.setState({\n        displayButton: \"block\"\n      });\n    } else {\n      this.setState({\n        displayButton: \"none\"\n      });\n    } // get the reward enumation\n\n\n    let rewards = [];\n    axios.get('https://aip-v1.ts.r.appspot.com/api/rewards').then(response => {\n      rewards = response.data;\n    }).catch(e => {\n      console.log(e);\n    });\n    this.setState({\n      RewardsEnumnation: rewards\n    });\n  }\n\n  handleItemSelect(item) {\n    let particularPost_Post;\n    let particularPost_Rewards;\n    let selectedPostID = item.post_id; // retrieve the selected Post data      \n\n    axios.get(`https://aip-v1.ts.r.appspot.com/api/posts/${selectedPostID}`).then(response => {\n      particularPost_Post = response.data.post;\n      particularPost_Rewards = response.data.rewards; // parse data into local states\n\n      this.setState({\n        particularPost_Post: particularPost_Post,\n        particularPost_Rewards: particularPost_Rewards\n      }); // decide which button to show in the detail page\n\n      this.setState({\n        displayAddRewardButton: \"none\",\n        displaySignPost: \"none\",\n        displayUploadProof: \"none\"\n      });\n      let loggedUserID = cookie.load(\"user_id\");\n\n      if (this.state.particularPost_Post[0].offer_by == null) {\n        this.setState({\n          displaySignPost: \"block\",\n          displayAddRewardButton: \"block\"\n        });\n      } else if (this.state.particularPost_Post[0].offer_by == loggedUserID && this.state.particularPost_Post[0].status != \"Closed\") {\n        this.setState({\n          displayUploadProof: \"block\",\n          displayAddRewardButton: \"none\"\n        });\n      } else if (this.state.particularPost_Post[0].status == \"Closed\") {\n        this.setState({\n          displayAddRewardButton: \"none\",\n          displaySignPost: \"none\",\n          displayUploadProof: \"none\"\n        });\n      }\n    }).then(() => {\n      // find the post man\n      let posterName;\n      let posterID = this.state.particularPost_Post[0].added_by;\n      axios.get(`https://aip-v1.ts.r.appspot.com/api/users/${posterID}`).then(response => {\n        posterName = response.data.users[0].first_name + \" \" + response.data.users[0].last_name;\n        this.setState({\n          particularPost_Poster: posterName\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }).then(() => {\n      // find people who add rewards\n      // clear old particularPost_adders\n      this.setState({\n        particularPost_adders: []\n      });\n      let rewards = this.state.particularPost_Rewards; // [{\n      //     user_id: \"\"\n      //     rewards:[\n      //         {\n      //             reward_name:\"\",qty:int\n      //         },\n      //         {\n      //             reward_name:\"\",qty:int\n      //         }\n      //     ]\n      // }]\n\n      rewards.forEach(item => {\n        let adderID = item.user_id;\n        let adderRewards = item.rewards;\n        axios.get(`https://aip-v1.ts.r.appspot.com/api/users/${adderID}`).then(response => {\n          let adderName = response.data.users[0].first_name + \" \" + response.data.users[0].last_name;\n          let particularPost_adders = this.state.particularPost_adders;\n          this.setState({\n            particularPost_adders: particularPost_adders.concat({\n              \"name\": adderName,\n              \"rewards\": adderRewards\n            })\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    }) // find the man who signed this \n    .then(() => {\n      this.setState({\n        particularPost_Signer: \"\"\n      });\n      let signerID = this.state.particularPost_Post[0].offer_by;\n\n      if (signerID) {\n        axios.get(`https://aip-v1.ts.r.appspot.com/api/users/${signerID}`).then(response => {\n          let signerName = response.data.users[0].first_name + \" \" + response.data.users[0].last_name;\n          this.setState({\n            particularPost_Signer: signerName\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  showAddRewardsModal() {\n    this.setState({\n      addRewardsVisible: true\n    });\n  }\n\n  handleCancel() {\n    this.setState({\n      addRewardsVisible: false,\n      uploadVisible: false\n    });\n    window.location.reload();\n  }\n\n  handleSignAPost() {\n    let post_id = this.state.particularPost_Post[0].post_id;\n    let user_id = cookie.load(\"user_id\");\n    let data = {\n      \"post_id\": post_id,\n      \"user_id\": user_id,\n      \"proof\": 0\n    };\n    axios.put(\"https://aip-v1.ts.r.appspot.com/api/posts/apply_rewards\", data).then(response => {\n      let resMessage = response.data.message;\n      message.success(resMessage);\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  showUploadModal() {\n    this.setState({\n      uploadVisible: true\n    });\n  }\n\n  render() {\n    let self = this;\n    let popContent = [];\n    let popContentIndex = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      classNam: \"requestList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestList-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestList-body-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, this.state.allPosts.map(function (item) {\n      switch (item.status) {\n        case \"Open\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item\",\n            onClick: self.handleItemSelect.bind(self, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 45\n            }\n          }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-body\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(UserOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 57\n            }\n          }), \"Poster:\", item.username), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(CalendarOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 57\n            }\n          }), \"Post Date:\", item.added_datetime.split(\"T\")[0]))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-status-open\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 45\n            }\n          }, item.status));\n          break;\n\n        case \"Closed\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item\",\n            onClick: self.handleItemSelect.bind(self, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 45\n            }\n          }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-body\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(UserOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 57\n            }\n          }), \"Poster:\", item.username), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(CalendarOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 57\n            }\n          }), \"Post Date:\", item.added_datetime.split(\"T\")[0]))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-status-closed\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 45\n            }\n          }, item.status));\n          break;\n\n        case \"Assigned\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item\",\n            onClick: self.handleItemSelect.bind(self, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 45\n            }\n          }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-body\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(UserOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 57\n            }\n          }), \"Poster:\", item.username), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(CalendarOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 57\n            }\n          }), \"Post Date:\", item.added_datetime.split(\"T\")[0]))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"requestList-item-status-assigned\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 45\n            }\n          }, item.status));\n          break;\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestList-body-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestList-body-right-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }, this.state.particularPost_Post[0].title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestList-body-right-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 39\n      }\n    }), \"Posted BY:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"requestList-body-right-body-favoricon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    }, this.state.particularPost_Poster)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }, \"Status:\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 33\n      }\n    }, this.state.particularPost_Post[0].status)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UsergroupAddOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 39\n      }\n    }), \"Reward BY:\"), this.state.particularPost_adders.map(function (item) {\n      popContent = popContent.concat( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 45\n        }\n      }, item.rewards.map(function (element) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 57\n          }\n        }, element.qty, \"      \", element.reward_name, \" \");\n      })));\n      popContentIndex++;\n      return /*#__PURE__*/React.createElement(Popover, {\n        content: popContent[popContentIndex - 1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 49\n        }\n      }, item.name));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CalendarOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 39\n      }\n    }), \"Post Date:\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 33\n      }\n    }, this.state.particularPost_Post[0].added_datetime.split(\"T\")[0])), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 39\n      }\n    }), \"Who is working on this:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"requestList-body-right-body-favoricon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 33\n      }\n    }, this.state.particularPost_Signer)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, \"Description:\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"1px solid #E5E5E5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 33\n      }\n    }, this.state.particularPost_Post[0].description))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestList-body-right-footer\",\n      style: {\n        display: this.state.displayButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showAddRewardsModal.bind(this),\n      style: {\n        display: this.state.displayAddRewardButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 29\n      }\n    }, \"Edit Rewards\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleSignAPost.bind(this),\n      style: {\n        display: this.state.displaySignPost\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, \"Make an Offer\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showUploadModal.bind(this),\n      style: {\n        display: this.state.displayUploadProof\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    }, \"Complete it\")))), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Select the rewards you want to add to this public request\",\n      footer: [],\n      visible: this.state.addRewardsVisible,\n      onCancel: this.handleCancel.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddRewards, {\n      postID: this.state.particularPost_Post[0].post_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Select and upload the proof image\",\n      footer: [],\n      visible: this.state.uploadVisible,\n      onCancel: this.handleCancel.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CompletePost, {\n      postID: this.state.particularPost_Post[0].post_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nexport default MyPosts;","map":{"version":3,"sources":["/Users/vrajmehta/Downloads/Downloads/React:JavaScript/AIP_IOU/client/src/components/MyPosts/MyPosts.js"],"names":["React","Popover","Button","Modal","Input","message","FaCoffee","GiChocolateBar","GiCupcake","FaLeaf","FaPizzaSlice","UserOutlined","UsergroupAddOutlined","CalendarOutlined","AddRewards","axios","cookie","CompletePost","timer","undefined","MyPosts","Component","constructor","props","timerStart","setInterval","userID","load","responseData","get","then","response","data","post","setState","allPosts","catch","e","console","log","state","login","displayButton","particularPost_Post","particularPost_Rewards","particularPost_Poster","particularPost_Signer","particularPost_adders","RewardsEnumnation","addRewardsVisible","uploadVisible","displayAddRewardButton","displaySignPost","displayUploadProof","componentDidMount","setTimeout","rewards","handleItemSelect","item","selectedPostID","post_id","loggedUserID","offer_by","status","posterName","posterID","added_by","users","first_name","last_name","forEach","adderID","user_id","adderRewards","adderName","concat","signerID","signerName","showAddRewardsModal","handleCancel","window","location","reload","handleSignAPost","put","resMessage","success","showUploadModal","render","self","popContent","popContentIndex","map","bind","title","username","added_datetime","split","element","qty","reward_name","name","border","description","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Popover, Button, Modal, Input, message } from 'antd';\nimport { FaCoffee } from 'react-icons/fa';\nimport { GiChocolateBar, GiCupcake } from 'react-icons/gi';\nimport { FaLeaf, FaPizzaSlice } from 'react-icons/fa';\nimport './MyPosts.css';\nimport { UserOutlined, UsergroupAddOutlined, CalendarOutlined } from '@ant-design/icons'\nimport AddRewards from \"../AddRewards/Index\";\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport CompletePost from '../CompletePost/CompletePost';\n\nlet timer = undefined;\n\nclass MyPosts extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            login:false,\n            displayButton:false,\n\n            allPosts: [],\n            particularPost_Post:[{\n                \"post_id\": \"\",\n                \"added_by\": \"\",\n                \"offer_by\": \"\",\n                \"title\": \"\",\n                \"description\": \"\",\n                \"added_datetime\": \"\",\n                \"status\": \"\",\n                \"proof\": false\n            }],\n            particularPost_Rewards:[],\n            particularPost_Poster:\"\",\n            particularPost_Signer:\"\",\n            particularPost_adders:[],\n            RewardsEnumnation:[],\n            addRewardsVisible:false,\n            uploadVisible:false,\n\n            displayAddRewardButton:\"none\",\n            displaySignPost:\"none\",\n            displayUploadProof:\"none\"\n\n        }\n    }\n    // Timer for refresh the post list\n    timerStart = () =>  {\n        timer = setInterval(() => {\n            let userID = cookie.load(\"user_id\");\n            let responseData = [];\n            axios.get(`https://aip-v1.ts.r.appspot.com/api/posts?user_id=${userID}`)\n            .then(response => {\n                // receive response Data\n                responseData=response.data.post;\n\n                // Parse Data into local states\n                this.setState({\n                    allPosts:responseData\n                })\n            })\n            .catch((e) => {\n                console.log(e)\n            })\n        },2000);  \n    }\n\n    componentDidMount(){\n        let userID = cookie.load(\"user_id\");\n        // get all posts related to the logged in user(with user_id parameter)\n        let responseData = [];\n        setTimeout(() => {\n            axios.get(`https://aip-v1.ts.r.appspot.com/api/posts?user_id=${userID}`)\n            .then(response => {\n                // receive response Data\n                responseData=response.data.post;\n\n                // Parse Data into local states\n                this.setState({\n                    allPosts:responseData\n                })\n            })\n            .catch((e) => {\n                console.log(e)\n            })\n        },1000);  \n        \n        this.timerStart();\n\n        // get login status from cookie\n        if(userID){\n            this.setState({\n                displayButton:\"block\"\n            });\n        }else{\n            this.setState({\n                displayButton:\"none\"\n            });\n        }  \n\n        // get the reward enumation\n        let rewards = [];\n        axios.get('https://aip-v1.ts.r.appspot.com/api/rewards')\n        .then(response => {\n            rewards = response.data;\n        })\n        .catch((e) => {\n            console.log(e)\n        })\n        this.setState({\n            RewardsEnumnation:rewards\n        });\n    }\n\n    handleItemSelect(item){\n        let particularPost_Post;\n        let particularPost_Rewards;\n        let selectedPostID=item.post_id;  \n        // retrieve the selected Post data      \n        axios.get(`https://aip-v1.ts.r.appspot.com/api/posts/${selectedPostID}`)\n        .then(response => {\n            particularPost_Post = response.data.post;\n            particularPost_Rewards = response.data.rewards;\n            // parse data into local states\n            this.setState({\n                particularPost_Post:particularPost_Post,\n                particularPost_Rewards:particularPost_Rewards\n            });\n            \n            // decide which button to show in the detail page\n            this.setState({\n                displayAddRewardButton:\"none\",\n                displaySignPost:\"none\",\n                displayUploadProof:\"none\"\n            });\n            let loggedUserID=cookie.load(\"user_id\");\n            if(this.state.particularPost_Post[0].offer_by == null){\n                this.setState({\n                    displaySignPost:\"block\",\n                    displayAddRewardButton:\"block\"\n                });\n            }else if(this.state.particularPost_Post[0].offer_by == loggedUserID\n                    && this.state.particularPost_Post[0].status != \"Closed\"){\n                this.setState({\n                    displayUploadProof:\"block\",\n                    displayAddRewardButton:\"none\"\n                });\n            }else if(this.state.particularPost_Post[0].status == \"Closed\"){\n                this.setState({\n                    displayAddRewardButton:\"none\",\n                    displaySignPost:\"none\",\n                    displayUploadProof:\"none\"\n                });\n            }\n\n        })\n        \n        .then( () => {\n            // find the post man\n            let posterName;\n            let posterID = this.state.particularPost_Post[0].added_by;\n            axios.get(`https://aip-v1.ts.r.appspot.com/api/users/${posterID}`)\n            .then(response =>{\n                posterName = response.data.users[0].first_name\n                            + \" \" +response.data.users[0].last_name;\n                this.setState({                \n                    particularPost_Poster:posterName\n                })\n            })\n            .catch((e) => {\n                console.log(e)\n            })                       \n        })\n        .then(()=>{\n            // find people who add rewards\n            // clear old particularPost_adders\n            this.setState({\n                particularPost_adders:[]\n            });\n            let rewards = this.state.particularPost_Rewards\n            // [{\n            //     user_id: \"\"\n            //     rewards:[\n            //         {\n            //             reward_name:\"\",qty:int\n            //         },\n            //         {\n            //             reward_name:\"\",qty:int\n            //         }\n            //     ]\n            // }]\n            rewards.forEach(item => {\n                let adderID = item.user_id;\n                let adderRewards = item.rewards;\n                axios.get(`https://aip-v1.ts.r.appspot.com/api/users/${adderID}`)\n                .then(response =>{\n                    let adderName = response.data.users[0].first_name\n                                + \" \" +response.data.users[0].last_name;  \n                    let particularPost_adders = this.state.particularPost_adders;                  \n                    this.setState({\n                        particularPost_adders:particularPost_adders.concat({\n                            \"name\":adderName,\n                            \"rewards\":adderRewards\n                        })\n                    })\n                })\n                .catch((e) => {\n                    console.log(e)\n                })\n            });             \n        })\n        // find the man who signed this \n        .then(() =>{\n            this.setState({\n                particularPost_Signer:\"\"\n            });\n            let signerID = this.state.particularPost_Post[0].offer_by\n            if(signerID){\n                axios.get(`https://aip-v1.ts.r.appspot.com/api/users/${signerID}`)\n                .then(response =>{\n                    let signerName = response.data.users[0].first_name\n                                + \" \" +response.data.users[0].last_name;\n                    this.setState({                \n                        particularPost_Signer:signerName\n                    })\n                })\n                .catch((e) => {\n                    console.log(e)\n                })\n            }\n        })\n        .catch((e) => {\n            console.log(e)\n        })\n        \n    }\n    \n    showAddRewardsModal(){\n        this.setState({\n            addRewardsVisible:true\n        });\n    }\n    handleCancel(){\n        this.setState({\n            addRewardsVisible:false,\n            uploadVisible:false\n        });\n        window.location.reload();\n    }\n    handleSignAPost(){        \n        let post_id = this.state.particularPost_Post[0].post_id;\n        let user_id = cookie.load(\"user_id\");\n        let data = {   \n            \"post_id\": post_id,\n            \"user_id\": user_id,\n            \"proof\": 0\n        }\n        axios.put(\"https://aip-v1.ts.r.appspot.com/api/posts/apply_rewards\",data)\n        .then(response =>{\n            let resMessage = response.data.message;\n            message.success(resMessage);\n            setTimeout(() => {\n                window.location.reload();\n            },2000);     \n        })\n        .catch((e) => {\n            console.log(e)\n        })\n    }\n    showUploadModal(){\n        this.setState({\n            uploadVisible:true\n        });\n    }\n\n    render(){\n        let self = this;\n        let popContent = [];\n        let popContentIndex =0;\n        return(\n            <div classNam=\"requestList\">                \n                <div className=\"requestList-body\">\n                    <div className=\"requestList-body-left\">\n                        {this.state.allPosts.map(function(item){\n                            switch (item.status) {\n                                case \"Open\":\n                                    return(\n                                        <div \n                                            className=\"requestList-item\"\n                                            onClick={self.handleItemSelect.bind(self,item)}>      \n                                            <div className=\"requestList-item-header\">{item.title}</div>\n                                            <div className=\"requestList-item-body\">\n                                                <ul>\n                                                    <li><UserOutlined />Poster:{item.username}</li>                                            \n                                                    <li><CalendarOutlined />Post Date:{item.added_datetime.split(\"T\")[0]}</li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"requestList-item-status-open\">{item.status}</div>\n                                        </div>\n                                    )\n                                    break;\n                                case \"Closed\":\n                                    return(\n                                        <div \n                                            className=\"requestList-item\"\n                                            onClick={self.handleItemSelect.bind(self,item)}>      \n                                            <div className=\"requestList-item-header\">{item.title}</div>\n                                            <div className=\"requestList-item-body\">\n                                                <ul>\n                                                    <li><UserOutlined />Poster:{item.username}</li>                                            \n                                                    <li><CalendarOutlined />Post Date:{item.added_datetime.split(\"T\")[0]}</li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"requestList-item-status-closed\">{item.status}</div>\n                                        </div>\n                                    )\n                                    break;\n                                case \"Assigned\":\n                                    return(\n                                        <div \n                                            className=\"requestList-item\"\n                                            onClick={self.handleItemSelect.bind(self,item)}>      \n                                            <div className=\"requestList-item-header\">{item.title}</div>\n                                            <div className=\"requestList-item-body\">\n                                                <ul>\n                                                    <li><UserOutlined />Poster:{item.username}</li>                                            \n                                                    <li><CalendarOutlined />Post Date:{item.added_datetime.split(\"T\")[0]}</li>\n                                                </ul>\n                                            </div>\n                                            <div className=\"requestList-item-status-assigned\">{item.status}</div>\n                                        </div>\n                                    )\n                                    break;\n                                \n                            }\n                        })}\n                    </div>\n                    <div className=\"requestList-body-right\">\n                        <div className=\"requestList-body-right-header\">\n                            {this.state.particularPost_Post[0].title}                            \n                        </div>\n                        <div className=\"requestList-body-right-body\">\n                            <div>\n                                <span><UserOutlined />Posted BY:</span>\n                                <span className=\"requestList-body-right-body-favoricon\">{this.state.particularPost_Poster}</span>\n                            </div>\n                            <div>\n                                <span>Status:</span>\n                                <span>{this.state.particularPost_Post[0].status}</span>\n                            </div>                          \n                            <div>\n                                <span><UsergroupAddOutlined />Reward BY:</span>                                \n                                    {this.state.particularPost_adders.map(function(item){\n                                        popContent = popContent.concat(\n                                            <div>\n                                                {item.rewards.map(function(element){\n                                                    return(\n                                                        <p>{element.qty}      {element.reward_name} </p>\n                                                    )\n                                                })}\n                                            </div>\n                                        );\n                                        popContentIndex++;\n                                        return(\n                                            <Popover content = {popContent[popContentIndex-1]}>\n                                                <span>{item.name}</span>\n                                            </Popover>                                            \n                                        )\n                                    })}\n                            </div>\n                            <div>\n                                <span><CalendarOutlined />Post Date:</span>\n                                <span>{this.state.particularPost_Post[0].added_datetime.split(\"T\")[0]}</span>\n                            </div>                           \n                            <div>\n                                <span><UserOutlined />Who is working on this:</span>\n                                <span className=\"requestList-body-right-body-favoricon\">{this.state.particularPost_Signer}</span>\n                            </div>\n                            <div>\n                                <span>Description:</span>\n                                <span> </span>\n                            </div>     \n                            <div style={{border:\"1px solid #E5E5E5\"}}>\n                                <p>{this.state.particularPost_Post[0].description}</p>\n                            </div>                    \n                        </div>\n                        <div className=\"requestList-body-right-footer\" \n                            style={{display:this.state.displayButton}}> \n                            <Button type=\"primary\" onClick={this.showAddRewardsModal.bind(this)} style={{display:this.state.displayAddRewardButton}}>Edit Rewards</Button>\n                            <Button type=\"primary\" onClick={this.handleSignAPost.bind(this)} style={{display:this.state.displaySignPost}}>Make an Offer</Button>\n                            <Button type=\"primary\" onClick={this.showUploadModal.bind(this)} style={{display:this.state.displayUploadProof}}>Complete it</Button>\n                        </div>\n                    </div>\n                </div>\n                <Modal\n                    title=\"Select the rewards you want to add to this public request\"\n                    footer={[]}\n                    visible={this.state.addRewardsVisible}\n                    onCancel={this.handleCancel.bind(this)}>\n                        <AddRewards \n                            postID={this.state.particularPost_Post[0].post_id}/>\n                </Modal>                 \n                <Modal\n                    title=\"Select and upload the proof image\"\n                    footer={[]}\n                    visible={this.state.uploadVisible}\n                    onCancel={this.handleCancel.bind(this)}>\n                        <CompletePost \n                            postID={this.state.particularPost_Post[0].post_id}/>\n                </Modal>          \n            </div>\n        );\n    }\n\n}\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}